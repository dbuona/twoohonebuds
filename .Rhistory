mm <- model.matrix(~doy, data.frame(doy))
# coefficients need to match the order of the colums in the model matrix (mm)
coeff <- c(spint[i],
rnorm(1, doycoef[i], doycoef.sd))
bvol <- dlogis(n = ntot, 0, scale = mm %*% coeff )
testdatx <- data.frame(bvol, sp = i,
doy)
testdat2 <- rbind(testdat2, testdatx)
}
View(testdatx)
nsp = 20 # number of species
ntot = 100 # numbers of obs per species.
baseinter <- 5 # baseline intercept (budvol) across all species
spint <- baseinter +rnorm(20,0,1) # different intercepts by species
baseeff<-.5 ##baseline effect size
speff<- baseeff+rnorm(20,0,.01)  ##diferent effect by species
# now start building ...
testdat2 <- vector()
for(i in 1:nsp){ # loop over species. i = 1
# continuous predictors, generate level for each observation
doy<- rtnorm(ntot,40,5,lower=20,upper=60)
## set up effect size
doycoef<-speff
doycoef.sd<-.1
# build model matrix
mm <- model.matrix(~doy, data.frame(doy))
# coefficients need to match the order of the colums in the model matrix (mm)
coeff <- c(spint[i],
rnorm(1, doycoef[i], doycoef.sd))
bvol <- rnorm(n = ntot, mean = mm %*% coeff, sd = 4)
testdatx <- data.frame(bvol, sp = i,
doy)
testdat2 <- rbind(testdat2, testdatx)
}
ggplot(testdat2,aes(bvol))+geom_density()+facet_wrap(~sp)
ggplot(testdat2,aes(bvol))+geom_density()
ggplot(testdat2,aes(bvol))+geom_density()+facet_wrap(~sp)
ggplot(testdat2,aes(bvol))+geom_density()
testdat2$bvol_cent<-testdat2$bvol/mean(testdat2$bvol)
ggplot(testdat2,aes(bvol_cent))+geom_density()
testdat2$logbvol<-log(testdat2$bvol)
ggplot(testdat2,aes(logbvol))+geom_density()
truvol.slope<-stan_lmer(bvol_cent~doy+(doy|sp), testdat2)
truvol.slope
fixef(truvol.slope)
pred<-predict(truvol.slope)
plot(pred,testdat2$bvol)
### Below adjusts to "true" bud vol at day
slopes<-coef(truvol.slope)
B<-slopes$sp$doy
c<-40
vol<-testdat2$bvol
for(i in 1:nsp){
testdat2$tru<-testdat2$bvol-(testdat2$bvol-40)*B[i]
}
pp_check(truvol.slope)
pp_check(truvol.slope$coefficients)
launch_shinystan(truvol.slope)
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/twoohonebuds")
library(ggplot2)
library(dplyr)
library(plyr)
library(lme4)
library(rstanarm)
library(rstan)
library(arm)
library("rmutil")
dater<-read.csv("input/BUDSET_Dissection_Data_April30.csv")
colnames(dater)
####cleaning
unique(dater$species)
unique(dater$Genus)
##### spaces in genus;fix
dater$Genus <- sub("^ | $", "", dater$Genus)
####make name
dater$name<-paste(dater$Genus,dater$species,sep="_")
unique(dater$name)
###returns Populus grandifolia (not a species) Fix
dater$species[dater$Genus=="Populus" & dater$species=="grandifolia"] <- "grandidentata"
dater$name<-paste(dater$Genus,dater$species,sep="_")
unique(dater$name)
#clean date
dater$date_measure1 <- as.Date(dater$date_measure, format="%Y-%m-%d")
dater$doy <- as.numeric(format(dater$date_measure1, "%j"))
unique(dater$Site)
###clean Saint Hippolyte
dater$Site[dater$Site=="St. Hippolyte"] <- "Saint Hippolyte"
###clean location:
dater$bud_location <- sub("^ | $", "", dater$bud_location)
unique(dater$bud_location)
dater$bud_location[dater$bud_location=="Terminal_twig"] <- "Terminal"
dater$bud_location[dater$bud_location=="Pseudoterminal_twig"] <- "Pseudoterminal" ###to I wantt o just name this terminal
unique(dater$bud_location)
####calculate bud volume: Formula for cone volume: V=pi*r^2*(h/3)
dater$bud_volume <- pi*(dater$bud_width/2)^2*(dater$bud_length/3)
dater$nickname[dater$name=="Acer_pensylvanicum"] <- "A.pe"
dater$nickname[dater$name=="Acer_rubrum"] <- "A.ru"
dater$nickname[dater$name=="Acer_saccharum"] <- "A.sa"
dater$nickname[dater$name=="Alnus_incana"] <- "A.in"
dater$nickname[dater$name=="Betula_alleghaniensis" ] <- "B.al"
dater$nickname[dater$name=="Betula_papyrifera" ] <- "B.pa"
dater$nickname[dater$name=="Corylus_cornuta" ] <- "C.co"
dater$nickname[dater$name=="Fagus_grandifolia" ] <- "F.gr"
dater$nickname[dater$name=="Fraxinus_nigra" ] <- "F.ni"
dater$nickname[dater$name=="Ilex_mucronata" ] <- "I.mu"
dater$nickname[dater$name=="Lonicera_canadensis" ] <- "L.ca"
dater$nickname[dater$name=="Populus_grandidentata" ] <- "P.gr"
dater$nickname[dater$name=="Prunus_pensylvanica" ] <- "P.pe"
dater$nickname[dater$name=="Quercus_rubra" ] <- "Q.ru"
dater$nickname[dater$name=="Spiraea_alba" ] <- "S.al"
dater$nickname[dater$name=="Vaccinium_myrtilloides" ] <- "V.my"
dater$nickname[dater$name=="Viburnum_cassinoides" ] <- "V.ca"
dater$nickname[dater$name=="Viburnum_lantanoides" ] <- "V.la"
###explore:
budvolume_summary <- ddply(dater, c("Site", "name"), summarise,
# above: can add bud_location etc. here is you want
# below: can change to bud_length etc.
N = length(bud_volume),
mean = mean(bud_volume),
sd   = sd(bud_volume),
se   = sd / sqrt(N))
### what are the species that overlap between the two sites?
hfdater <- subset(dater, Site=="Harvard Forest")
shdater <- subset(dater, Site=="Saint Hippolyte")
(sppnotatSH <- unique(hfdater$name)[which(!  unique(hfdater$name) %in% unique(shdater$name)   )]    )
(sppnotatHF <- unique(shdater$name)[which(!unique(shdater$name) %in% unique(hfdater$name))])
daterbothsites <- dater[which(!dater$name %in% sppnotatSH),]
daterbothsites <- daterbothsites[which(!daterbothsites$name %in% sppnotatHF),]
###name shorter names
#####Plottting
ggplot(daterbothsites,aes(nickname,bud_volume,col=Site))+stat_summary()
### but we know ther is bias in the date of measuring
ggplot(daterbothsites, aes(doy))+geom_histogram(binwidth=1,aes(color=Site))
###in general buds grow. how do we correct for this??
### does location matter for size
ggplot(daterbothsites,aes(nickname,bud_volume,col=bud_location))+stat_summary()
###look over time to see bias
# model 1: check for day effect, excluding data measured in March.
# Logic: exclude the bulk of the SH measurements, now focusing on initial and repeated HF measures, and SH measures made at the repeated measure time (Late April)
###note i am doing this with bud_volume instead of width as jehane did
daternoMarch <- subset(dater, doy<60 | doy>90)
daternoMarchHF <- subset(daternoMarch, Site=="Harvard Forest")
modelnoMarch <- lm(bud_volume ~ name * doy, data=daternoMarch, na.action=na.exclude)
summary(modelnoMarch)
coef(modelnoMarch)
anova(modelnoMarch)
specieslist <- unique(daternoMarchHF$name)
listhere <- list()
dataonesp <- subset(daternoMarchHF, name==specieslist[sp])
#for (sp in seq_along(specieslist)){
modelnoMarch <- stan_glm(bud_volume~doy, data=dataonesp, na.action=na.exclude)
pp_check(modelnoMarch)
listhere[[paste(sp, specieslist[sp])]] <- list(coef(modelnoMarch)) # adding species name and coefs for doy effect
}
listhere
dataonespHF <- subset(daternoMarchHF, name==specieslist[1])
modelwdoy <- lm(bud_volume~doy, data=dataonesp, na.action=na.exclude)
summary(modelwdoy)
dataonesp <- subset(daterbothsites, name==specieslist[1])
modelwSite <- lm(bud_volume~Site, data=dataonesp, na.action=na.exclude)
summary(modelwSite)
#####Dan's attempt to bias correct and model "true bud volume
#true bud volume ~  a[sp/ind] + doy[sp] + measured bud volume[sp]
## basic true bud volume with comeplete pooling all data
ggplot(daternoMarch,aes(bud_volume))+geom_density()
ggplot(daternoMarch,aes(bud_volume))+geom_density()+facet_wrap(~nickname)
###try centering
daternoMarch$log_bvol<-log(daternoMarch$bud_volume)
ggplot(daternoMarch,aes(log_bvol))+geom_density()
truvol<-stan_lmer(log_bvol+(1+doy|name), daternoMarchHF)
truvol<-stan_lmer(log_bvol+(1+doy|name), daternoMarch)
daternoMarch$log_bvol<-log(daternoMarch$bud_volume)
truvol<-stan_lmer(log_bvol+(1+doy|name), daternoMarch)
truvol<-stan_lmer(log_bvol+~doy+(doy|name), daternoMarch)
truvol<-stan_lmer(log_bvol~doy+(doy|name), daternoMarch)
####This is the script for Dan's OEB201 project. Fall 2017.
###GOAL: model actual bud volume for the dataset Jehane collected as if all buds were measured on the same day.
###Load packages and data
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/twoohonebuds")
library(ggplot2)
library(dplyr)
library("tidyr")
library(plyr)
library(lme4)
library(rstanarm)
library(rstan)
library("arm")
library("rmutil")
library("MCMCglmm")
dater<-read.csv("input/BUDSET_Dissection_Data_April30.csv")
###PART IA: Data cleaning######
colnames(dater)
unique(dater$species)
unique(dater$Genus)
##### spaces in genus;fix
dater$Genus <- sub("^ | $", "", dater$Genus)
####make name
dater$name<-paste(dater$Genus,dater$species,sep="_")
unique(dater$name)
###returns Populus grandifolia (not a species) Fix
dater$species[dater$Genus=="Populus" & dater$species=="grandifolia"] <- "grandidentata"
dater$name<-paste(dater$Genus,dater$species,sep="_")
unique(dater$name)
#clean date
dater$date_measure1 <- as.Date(dater$date_measure, format="%Y-%m-%d")
dater$doy <- as.numeric(format(dater$date_measure1, "%j"))
#clean site
unique(dater$Site)
dater$Site[dater$Site=="St. Hippolyte"] <- "Saint Hippolyte"
unique(dater$Site)
###clean location:
dater$bud_location <- sub("^ | $", "", dater$bud_location)
unique(dater$bud_location)
dater$bud_location[dater$bud_location=="Terminal_twig"] <- "Terminal"
dater$bud_location[dater$bud_location=="Pseudoterminal_twig"] <- "Pseudoterminal"
unique(dater$bud_location)
####calculate bud volume: Formula for cone volume: V=pi*r^2*(h/3)
dater$bud_volume <- pi*(dater$bud_width/2)^2*(dater$bud_length/3)
####Part IB: Data exploration#####
##give things nicknames so will me more visable on figures
dater$nickname[dater$name=="Acer_pensylvanicum"] <- "A.pe"
dater$nickname[dater$name=="Acer_rubrum"] <- "A.ru"
dater$nickname[dater$name=="Acer_saccharum"] <- "A.sa"
dater$nickname[dater$name=="Alnus_incana"] <- "A.in"
dater$nickname[dater$name=="Betula_alleghaniensis" ] <- "B.al"
dater$nickname[dater$name=="Betula_papyrifera" ] <- "B.pa"
dater$nickname[dater$name=="Corylus_cornuta" ] <- "C.co"
dater$nickname[dater$name=="Fagus_grandifolia" ] <- "F.gr"
dater$nickname[dater$name=="Fraxinus_nigra" ] <- "F.ni"
dater$nickname[dater$name=="Ilex_mucronata" ] <- "I.mu"
dater$nickname[dater$name=="Lonicera_canadensis" ] <- "L.ca"
dater$nickname[dater$name=="Populus_grandidentata" ] <- "P.gr"
dater$nickname[dater$name=="Prunus_pensylvanica" ] <- "P.pe"
dater$nickname[dater$name=="Quercus_rubra" ] <- "Q.ru"
dater$nickname[dater$name=="Spiraea_alba" ] <- "S.al"
dater$nickname[dater$name=="Vaccinium_myrtilloides" ] <- "V.my"
dater$nickname[dater$name=="Viburnum_cassinoides" ] <- "V.ca"
dater$nickname[dater$name=="Viburnum_lantanoides" ] <- "V.la"
###data summary
budvolume_summary <- ddply(dater, c("Site", "name"), summarise,
N = length(bud_volume),
mean = mean(bud_volume),
sd   = sd(bud_volume),
se   = sd / sqrt(N))
budvolume_summary
###plot: bud volume by species and site
ggplot(dater,aes(nickname,bud_volume,col=Site))+stat_summary() ###no consistant trend in sites differences. could be an artifact of when they were measured.
###plot: measurement date
ggplot(dater, aes(doy))+geom_histogram(binwidth=1,aes(color=Site)) ###significant temporal bias
##plot: location on twig
ggplot(dater,aes(nickname,bud_volume,col=bud_location))+stat_summary() ###terminal buds generally largest.
###############################Part II: Modeling#######################################################
###Part II:A: Fake data
set.seed(73)
#Varying slope, varying intercept
nsp = 20 # number of species
ntot = 100 # numbers of obs per species.
baseinter <- 8 # baseline intercept (budvol) across all species
spint <- baseinter +rnorm(20,0,1) # different intercepts by species
baseeff<-.1 ##baseline effect size
speff<- baseeff+rnorm(20,0,.02)  ##diferent effect by species
# now start building ...
testdat2 <- vector()
for(i in 1:nsp){ # loop over species. i = 1
# continuous predictors, generate level for each observation
doy<- rtnorm(ntot,45,3,lower=30,upper=60)
## set up effect size
doycoef<-speff
doycoef.sd<-.1
# build model matrix
mm <- model.matrix(~doy, data.frame(doy))
# coefficients need to match the order of the colums in the model matrix (mm)
coeff <- c(spint[i],
rnorm(1, doycoef[i], doycoef.sd))
bvol <- rnorm(n = ntot, mean = mm %*% coeff, sd = 4)
testdatx <- data.frame(bvol, sp = i,
doy)
testdat2 <- rbind(testdat2, testdatx)
}
##Visualize new data
ggplot(testdat2,aes(bvol))+geom_density()
ggplot(testdat2,aes(bvol))+geom_density()+facet_wrap(~sp)
##some have negative volumes, which seems bioligcally unrealistic, but overall pretty good
##centering the data
testdat2$bvol_cent<-testdat2$bvol/mean(testdat2$bvol)
ggplot(testdat2,aes(bvol_cent))+geom_density()
###model for fake data
truvol.slope<-stan_lmer(bvol_cent~doy+(doy|sp), testdat2)
truvol.slope
fixef(truvol.slope) ##intercepts are way too low
ranef(truvol.slope)
##posterior predictive check
pp_check(truvol.slope)
##plot origanl vs. predicted
yrep<-as.data.frame(posterior_predict(truvol.slope,draws=1))
ncol(yrep)
yrep<-gather(yrep,ob,pred,1:2000)
yrep$orig<-testdat2$bvol
ggplot(yrep,aes(orig,pred))+geom_point() ###okayish
### Below adjusts to "true" bud vol at day if everything was measured at day 40
slopes<-coef(truvol.slope)
B<-slopes$sp$doy
c<-40
vol<-testdat2$bvol
for(i in 1:nsp){
testdat2$tru<-testdat2$bvol-(testdat2$doy-40)*B[i]
}
testdat2$bvol_cent<-testdat2$bvol-mean(testdat2$bvol)
testdat2$bvol_cent<-testdat2$bvol-mean(testdat2$bvol)
ggplot(testdat2,aes(bvol_cent))+geom_density()
testdat2$bvol_cent<-testdat2$bvol/mean(testdat2$bvol)
ggplot(testdat2,aes(bvol_cent))+geom_density()
daternoMarch <- subset(dater, doy<60 | doy>90)
###no pooling
specieslist <- unique(daternoMarch$name)
listhere <- list()
for (sp in seq_along(specieslist)){
dataonesp <- subset(daternoMarch, name==specieslist[sp])
modelnoMarch <- stan_glm(bud_volume~doy, data=dataonesp, na.action=na.exclude)
pp_check(modelnoMarch)
listhere[[paste(sp, specieslist[sp])]] <- list(coef(modelnoMarch)) # adding species name and coefs for doy effect
}
listhere
ggplot(daternoMarch,aes(bud_volume))+geom_density()
ggplot(daternoMarch,aes(bud_volume))+geom_density()+facet_wrap(~nickname) ##not so normal
###log transform:
daternoMarch$log_bvol<-log(daternoMarch$bud_volume)
ggplot(daternoMarch,aes(log_bvol))+geom_density() ##now its normal
daternoMarch$cent_bvol<-daternoMarch$bud_volume-mean(daternoMarch$bud_volume)
ggplot(daternoMarch,aes(cent_bvol))+geom_density()
daternoMarch$cent_bvol<-daternoMarch$bud_volume-mean(daternoMarch$bud_volume)
View(daternoMarch)
daternoMarch$cent_bvol<-daternoMarch$bud_volume-(mean(daternoMarch$bud_volume))
View(daternoMarch)
daternoMarch$cent_bvol<-NA
daternoMarch$cent_bvol<-daternoMarch$bud_volume-mean(daternoMarch$bud_volume)
mean(daternoMarch$bud_volume)
daternoMarch$cent_bvol<-daternoMarch$bud_volume-mean(daternoMarch$bud_volume,na.rm=TRUE)
ggplot(daternoMarch,aes(cent_bvol))+geom_density()
daternoMarch$log_bvol<-log(daternoMarch$cent_bvol)
ggplot(daternoMarch,aes(log_bvol))+geom_density() ##now its normal
daternoMarch$log_bvol<-log(daternoMarch$bud_volume)
ggplot(daternoMarch,aes(log_bvol))+geom_density() ##now its normal
truvol<-stan_lmer(log_bvol~doy+(doy|name), daternoMarch,cores=4)
truvol
coef(truvol)
ranef(truvol)
pp_check(truvol)
slopes<-coef(truvol)
B<-slopes$name$doy
B
B1<-exp(B)
B1
modelnoMarch <- stan_glm(bvol~doy, data=dataonesp, na.action=na.exclude)
pp_check(modelnoMarch)
listhere[[paste(sp, specieslist[sp])]] <- as.data.frame(coef(modelnoMarch)) # adding species name and coefs for doy effect
}
listhere <- list()
for (sp in seq_along(specieslist)){
dataonesp <- subset(daternoMarch, name==specieslist[sp])
modelnoMarch <- stan_glm(bvol~doy, data=dataonesp, na.action=na.exclude)
pp_check(modelnoMarch)
listhere[[paste(sp, specieslist[sp])]] <- as.data.frame(coef(modelnoMarch)) # adding species name and coefs for doy effect
}
listhere <- list()
listhere
listhere
specieslist <- unique(daternoMarch$name)
listhere <- list()
for (sp in seq_along(specieslist)){
dataonesp <- subset(daternoMarch, name==specieslist[sp])
modelnoMarch <- stan_glm(bud_volume~doy, data=dataonesp, na.action=na.exclude)
pp_check(modelnoMarch)
listhere[[paste(sp, specieslist[sp])]] <- list(coef(modelnoMarch)) # adding species name and coefs for doy effect
}
listhere
coef(truvol$name$doy)
coef(truvol)
real<-exp(coef(truvol))
real<-exp(coef(truvol)[,2])
real<-exp(coef(truvol)[2])
coef(truvol)[2]
coef(truvol)[1]
B<-slopes$name$doy
B
listhere
View(listhere)
pp_check(truvol)
slopes<-coef(truvol)
B<-slopes$name$doy
c<-40
N<-as.data.frame(specieslist)
N<-nrow(N)
for(i in 1:N){
dater$tru<-dater$bud_volume-((dater$doy-c)*B[i])
}
###
#Plot
Z<-dplyr::select(dater,nickname,bud_volume,tru)
Q<-gather(Z,change,volume,2:3)
ggplot(Q,aes(nickname,volume))+geom_jitter(height=0,width=2,aes(color=change))
View(dater)
d<-read.csv("input/Budburst By Day.csv")
View(d)
dd<-dplyr::select(d,ind,rep,lday,bday)
meanbb<- dplyr::group_by(dd,ind)
meanbb<-dplyr::summarise(meanbb,meanbday=mean(bday))
View(meanbb)
meanbb<-dplyr::summarise(meanbb,meanbday=mean(bday), na.rm=TRUE)
dd<-dplyr::select(d,ind,rep,lday,bday)
meanbb<- dplyr::group_by(dd,ind)
meanbb<-dplyr::summarise(meanbb,meanbday=mean(bday), na.rm=TRUE)
View(meanbb)
d<-read.csv("input/Budburst By Day.csv")
dd<-dplyr::select(d,ind,rep,lday,bday)
meanbb<- dplyr::group_by(dd,ind)
meanbb<-dplyr::summarise(meanbb,meanbday=mean(bday,na.rm=TRUE)
View(meanbb)
View(meanbb)
meanbb<-dplyr::summarise(meanbb,meanbday=mean(bday,na.rm=TRUE)
)
View(meanbb)
dd<-dplyr::select(d,ind,sp,rep,lday,bday)
meanbb<- dplyr::group_by(dd,ind)
meanbb<-dplyr::summarise(meanbb,meanbday=mean(bday,na.rm=TRUE),)
meanbb<-dplyr::summarise(meanbb,meanbday=mean(bday,na.rm=TRUE),sp)
meanbb<- dplyr::group_by(dd,ind)
meanbb<-dplyr::summarise(meanbb,meanbday=mean(bday,na.rm=TRUE),sp)
meanbb<-dplyr::summarise(meanbb,meanbday=mean(bday,na.rm=TRUE))
colnames(dater)[which(names(dater) == "individual_ID")] <- "ind"
gooby<- dplyr::group_by(dater,ind)
gooby<-dplyr::summarise(gooby,meanbvol=mean(bud_volume))
gooby<- dplyr::group_by(dater,ind)
gooby<-dplyr::summarise(gooby,meanbvol=mean(tru))
View(gooby)
newdat<-right_join(meanbb,gooby,by="ind")
View(newdat)
newdat<-split(newdat$ind, 0)
newdat<-right_join(meanbb,gooby,by="ind")
newdat<-split(newdat$ind, "0")
newdat<-right_join(meanbb,gooby,by="ind")
newdat<-split(newdat$ind, "0")
newdat<-split(newdat$ind, by=0)
newdat<-split(newdat$ind, by="0")
newdat<-right_join(meanbb,gooby,by="ind")
newdat<-split(newdat,ind, by="0")
newdat<-split(newdat,ind, by=0)
newdat<-right_join(meanbb,gooby,by="ind")
newdat<-split(newdat,ind, by=0)
newdat<-split(newdat,ind)
newdat<-right_join(meanbb,gooby,by="ind")
View(newdat)
string<-newdat$ind
sapply(seq(from=1, to=nchar(string), by=6), function(i) substr(string, i, i+4))
string
newdat<-transform(newdat, SP = substr(ind, 1, 6), ID = substr(ind, 7, 11))
View(newdat)
gooby2<-dplyr::summarise(gooby,meanstemdiam=mean(stem_diameter))
gooby
View(gooby)
View(gooby)
gooby<- dplyr::group_by(dater,ind)
gooby1<-dplyr::summarise(gooby,meanbvol=mean(tru))
gooby2<-dplyr::summarise(gooby,meanstemdiam=mean(stem_diameter))
View(gooby2)
gooby2<-dplyr::summarise(gooby,meanstemdiam=mean(stem_diameter,na.rm=TRUE))
View(gooby2)
newdat<-right_join(meanbb,gooby1,by="ind")
newdat<-right_join(newdat,gooby2,by="ind")
###clean species
newdat<-transform(newdat, SP = substr(ind, 1, 6), ID = substr(ind, 7, 11))
View(newdat)
cor(newdat$meanbvol,newdat$meanstemdiam)
cor(newdat$meanbvol,newdat$meanstemdiam)
ggplot(newdat,aes(meanbvol))+geom_density()
ggplot(newdat,aes(meanbday))+geom_density()
ggplot(newdat,aes(meanstemdiam))+geom_density()
moodle<-stan_glmer(meanbday ~ meanstemdiam + meanbvol + (meanstemdiam|SP)+(meanbvol|SP),
data = newdat, family = poisson,
prior = normal(0,2.5), prior_intercept = normal(0,5),
cores = 4)
moodle<-stan_glmer(meanbday ~ meanstemdiam + meanbvol + (meanstemdiam|SP)+(meanbvol|SP),
data = newdat, family = gaussian,
prior = normal(0,2.5), prior_intercept = normal(0,5),
cores = 4)
moodle<-stan_glmer(meanbday ~ meanstemdiam + meanbvol + (meanstemdiam+meanbvol|SP),
data = newdat, family = gaussian,
prior = normal(0,2.5), prior_intercept = normal(0,5),
cores = 4)
moodle
pp_check(moodle)
coef(moodle)
moodle2<-stan_glmer(meanbday ~ meanstemdiam* meanbvol + (meanstemdiam+meanbvol|SP),
data = newdat, family = gaussian,
prior = normal(0,2.5), prior_intercept = normal(0,5),
cores = 4)
moodle2
coef(moodle2)
pp_check(moodle2)
launch_shinystan(truvol)
launch_shinystan(truvol)
posterior_inerval(truvol)
posterior_interval(truvol)
coef(truvol)
posterior_interval(truvol)
posterior_interval(moodle)
